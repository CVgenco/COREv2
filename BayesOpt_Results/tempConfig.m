config = struct();
config.dataFiles.nodalPrices = '/Users/chayanvohra/Downloads/Energy Price & Risk Simulator/Price Forecaster/CORE/historical_nodal_prices_filled.csv';
config.dataFiles.hubPrices = '/Users/chayanvohra/Downloads/Energy Price & Risk Simulator/Price Forecaster/CORE/historical_hub_prices_filled.csv';
config.dataFiles.nodalGeneration = '/Users/chayanvohra/Downloads/Energy Price & Risk Simulator/Price Forecaster/CORE/historical_nodal_generation.csv';
config.dataFiles.regup = '/Users/chayanvohra/Downloads/Energy Price & Risk Simulator/Price Forecaster/CORE/historical_regup_filled.csv';
config.dataFiles.regdown = '/Users/chayanvohra/Downloads/Energy Price & Risk Simulator/Price Forecaster/CORE/historical_regdown_filled.csv';
config.dataFiles.nonspin = '/Users/chayanvohra/Downloads/Energy Price & Risk Simulator/Price Forecaster/CORE/historical_nonspin_filled.csv';
config.dataFiles.ancillaryForecast = '/Users/chayanvohra/Downloads/Energy Price & Risk Simulator/Price Forecaster/CORE/forecasted_annual_ancillary.csv';
config.dataFiles.hourlyHubForecasts = '/Users/chayanvohra/Downloads/Energy Price & Risk Simulator/Price Forecaster/CORE/hourly_hub_forecasts.csv';
config.dataFiles.hourlyNodalForecasts = '/Users/chayanvohra/Downloads/Energy Price & Risk Simulator/Price Forecaster/CORE/hourly_nodal_forecasts.csv';
config.timestampVars.nodalPrices = 'Timestamp';
config.timestampVars.hubPrices = 'Timestamp';
config.timestampVars.nodalGeneration = 'Timestamp';
config.timestampVars.regup = 'Timestamp';
config.timestampVars.regdown = 'Timestamp';
config.timestampVars.nonspin = 'Timestamp';
config.timestampVars.hourlyHubForecasts = 'Timestamp';
config.timestampVars.hourlyNodalForecasts = 'Timestamp';
config.outputDirs.eda = 'EDA_Results';
config.outputDirs.correlation = 'Correlation_Results';
config.outputDirs.simulation = 'Simulation_Results';
config.outputDirs.validation = 'Validation_Results';
config.simulation.nPaths = 2;
config.simulation.length = [];
config.simulation.randomSeed = 42;
config.jumpModeling.detectionMethod = 'std';
config.jumpModeling.threshold = 0.1199;
config.jumpModeling.useEmpiricalDistribution = 0;
config.jumpModeling.regimeConditional = 1;
config.jumpModeling.minJumpSize = 92.9968;
config.jumpModeling.info = 'Configure jump detection and simulation: detectionMethod (std/percentile), threshold, empirical/fitted, regimeConditional.';
config.jumpModeling.enabled = 1;
config.innovationDistribution.type = 't';
config.innovationDistribution.degreesOfFreedom = 7;
config.innovationDistribution.info = 'Configure innovation distribution for simulated returns: type (gaussian/t/custom), degreesOfFreedom (empty=auto)';
config.innovationDistribution.enabled = 1;
config.copulaType = 't';
config.copulaInfo = 'Configure copula for modeling cross-product correlations: gaussian (simpler), t (fat tails), vine (flexible)';
config.blockBootstrapping.enabled = 1;
config.blockBootstrapping.blockSize = 79;
config.blockBootstrapping.conditional = 0;
config.blockBootstrapping.conditionType = 'volatility';
config.blockBootstrapping.info = 'Configure block bootstrapping: enabled, blockSize (steps), conditional (by regime/volatility)';
config.regimeVolatilityModulation.enabled = 1;
config.regimeVolatilityModulation.amplificationFactor = 1.14552;
config.regimeVolatilityModulation.maxVolRatio = 86.3862;
config.regimeVolatilityModulation.info = 'Configure regime volatility modulation: enabled, amplificationFactor (scales regime-specific volatility)';
config.savePlots = 1;
config.savePatterns = 1;
config.saveDiagnostics = 1;
config.useRegimeSwitching = 1;
config.timeVaryingCorr.minOverlap = 10;
config.timeVaryingCorr.consistencyMode = 'strict';
config.info = 'Edit this file to configure all model parameters, file paths, and options.';
config.regimeDetection.nRegimes = 2;
config.regimeDetection.method = 'rollingvol';
config.regimeDetection.windowSize = 'auto';
config.regimeDetection.threshold = 'auto';
config.regimeDetection.minDuration = 3;
config.regimeDetection.info = 'Configure regime detection: nRegimes, method (HMM/bayesian/rollingVol), windowSize, threshold, minDuration.';
config.validation.enableReturnDist = 1;
config.validation.enableVolClustering = 1;
config.validation.enableJumpAnalysis = 1;
config.validation.enableRegimeDurations = 1;
config.validation.enableCorrMatrix = 1;
config.validation.stdDeviationThreshold = 0.5;
config.validation.jumpDeviationThreshold = 0.5;
config.validation.outputDir = 'Validation_Results';
config.dataPreprocessing.enabled = 1;
config.dataPreprocessing.robustOutlierDetection = 1;
config.dataPreprocessing.volatilityExplosionPrevention = 1;
config.dataPreprocessing.adaptiveBlockSize = 1;
config.outlierDetection.enableIQR = 1;
config.outlierDetection.enableModifiedZScore = 1;
config.outlierDetection.enableEnergyThresholds = 1;
config.outlierDetection.iqrMultiplier = 2.5;
config.outlierDetection.modifiedZThreshold = 3.5;
config.outlierDetection.replacementMethod = 'interpolation';
config.outlierDetection.verbose = 1;
config.missingDataHandling.enabled = 1;
config.missingDataHandling.method = 'adaptive';
config.missingDataHandling.maxGapSize = 24;
config.missingDataHandling.verbose = 1;
config.volatilityControl.enabled = 1;
config.volatilityControl.maxVolatilityRatio = 50;
config.volatilityControl.smoothingWindow = 12;
config.volatilityControl.verbose = 1;
config.qualityValidation.enabled = 1;
config.qualityValidation.maxMissingPercentage = 20;
config.qualityValidation.minDataPoints = 100;
config.qualityValidation.verbose = 1;
config.blockSizeOptimization.enabled = 1;
config.blockSizeOptimization.minBlockSize = 12;
config.blockSizeOptimization.maxBlockSize = 168;
config.blockSizeOptimization.evaluationMethod = 'stability';
config.blockSizeOptimization.verbose = 1;
config.volatilityPrevention.enabled = 1;
config.volatilityPrevention.maxVolatilityRatio = 5;
config.volatilityPrevention.rollingWindow = 24;
config.volatilityPrevention.earlyWarningMultiplier = 3;
config.bayesianOptSafety.enabled = 1;
config.bayesianOptSafety.dataIntegrityChecks = 1;
config.bayesianOptSafety.parameterBoundsValidation = 1;
config.bayesianOptSafety.volatilityExplosionPrevention = 1;
config.bayesianOptSafety.blockSizeSafetyValidation = 1;
config.anchorWeight = 0.142393;
config.capReturn = 2431.34;
config.capJump = 1721.67;
config.capDiff = 2894.12;
config.capAdj = 8459.72;
